{
  // Each quest may have an optional JSON file (like this one) that defines
  // server-side behaviors for the quest.

  // For battle quests, the BattleRules field should be defined to match the
  // rules that the quest defines internally. These are the rules for Battle 1.
  "BattleRules": {
    "TechDiskMode": "ALLOW",
    "WeaponAndArmorMode": "ALLOW",
    "MagMode": "ALLOW",
    "ToolMode": "ALLOW",
    "TrapMode": "ALL_PLAYERS",
    "RespawnMode": "ALLOW",
    "ReplaceChar": 0,
    "DropWeapon": 1,
    "IsTeams": 1,
    "HideTargetReticle": 1,
    "DeathLevelUp": 3,
    "MesetaMode": "ALLOW",
    "EnableSonar": 1,
    "TimeLimit": 10,
    "ForbidScapeDolls": 1,
    "DeathTechLevelUp": 1,
    "TrapCounts": [5, 5, 5, 5],
    "SonarCount": 5,
    "BoxDropArea": 10,
    // These rules are used by other battles, but not by Battle 1:
    // "Lives": 10,
    // "MaxTechLevel": 15,
    // "CharLevel": 1,
  },

  // Challenge quests should specify the ChallengeTemplateIndex field, which
  // should match the template that the quest uses to replace player characters.
  // "ChallengeTemplateIndex": 0,

  // Quests may be set to be unavailable until a preceding quest has been
  // cleared or a team reward has been purchased. To enable this feature, set a
  // value for AvailableIf in the quest's JSON file. (This is ignored if the
  // player has the DISABLE_QUEST_REQUIREMENTS flag in their license.) This
  // field's value should be an expression that tests any of the following:
  //   F_XXXX: Quest flag specified in hex (e.g. F_014D)
  //   CC_EpX_Y: Whether or not Challenge stage X in Episode Y is complete
  //   T_ZZZ: Whether or not the player's BB team has reward ZZZ
  //   V_NumPlayers: The number of players in the current game
  //   V_Event: The holiday event in the current game
  //   V_V1Present: Whether there are any V1 players in the current game
  // You can also use constants, parentheses, and many common integer and
  // boolean operators. An example expression with random values is shown here.
  // "AvailableIf": "(F_016D || T_EpicCustomQuest || (V_NumPlayers <= 2)) && !F_0173",

  // On BB, quests may be disabled but still visible to the player. This
  // expression controls when that should be the case. If AvailableIf evaluates
  // to false, this is ignored. This field is also ignored if the player has
  // the DISABLE_QUEST_REQUIREMENTS flag in their license.
  // "EnabledIf": "!F_0169",
}
